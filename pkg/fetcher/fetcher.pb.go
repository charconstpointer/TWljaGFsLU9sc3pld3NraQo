// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.11.4
// source: pkg/fetcher/pb/fetcher.proto

package fetcher

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Change int32

const (
	Change_DELETED Change = 0
	Change_CREATED Change = 1
	Change_EDITED  Change = 2
)

// Enum value maps for Change.
var (
	Change_name = map[int32]string{
		0: "DELETED",
		1: "CREATED",
		2: "EDITED",
	}
	Change_value = map[string]int32{
		"DELETED": 0,
		"CREATED": 1,
		"EDITED":  2,
	}
)

func (x Change) Enum() *Change {
	p := new(Change)
	*p = x
	return p
}

func (x Change) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Change) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_fetcher_pb_fetcher_proto_enumTypes[0].Descriptor()
}

func (Change) Type() protoreflect.EnumType {
	return &file_pkg_fetcher_pb_fetcher_proto_enumTypes[0]
}

func (x Change) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Change.Descriptor instead.
func (Change) EnumDescriptor() ([]byte, []int) {
	return file_pkg_fetcher_pb_fetcher_proto_rawDescGZIP(), []int{0}
}

type Measure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	URL      string `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	Interval int32  `protobuf:"varint,3,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *Measure) Reset() {
	*x = Measure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Measure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Measure) ProtoMessage() {}

func (x *Measure) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Measure.ProtoReflect.Descriptor instead.
func (*Measure) Descriptor() ([]byte, []int) {
	return file_pkg_fetcher_pb_fetcher_proto_rawDescGZIP(), []int{0}
}

func (x *Measure) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Measure) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Measure) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type GetMeasuresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMeasuresRequest) Reset() {
	*x = GetMeasuresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeasuresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeasuresRequest) ProtoMessage() {}

func (x *GetMeasuresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeasuresRequest.ProtoReflect.Descriptor instead.
func (*GetMeasuresRequest) Descriptor() ([]byte, []int) {
	return file_pkg_fetcher_pb_fetcher_proto_rawDescGZIP(), []int{1}
}

type GetMeasuresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Measures []*Measure `protobuf:"bytes,1,rep,name=measures,proto3" json:"measures,omitempty"`
}

func (x *GetMeasuresResponse) Reset() {
	*x = GetMeasuresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeasuresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeasuresResponse) ProtoMessage() {}

func (x *GetMeasuresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeasuresResponse.ProtoReflect.Descriptor instead.
func (*GetMeasuresResponse) Descriptor() ([]byte, []int) {
	return file_pkg_fetcher_pb_fetcher_proto_rawDescGZIP(), []int{2}
}

func (x *GetMeasuresResponse) GetMeasures() []*Measure {
	if x != nil {
		return x.Measures
	}
	return nil
}

type ListenForChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListenForChangesRequest) Reset() {
	*x = ListenForChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenForChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenForChangesRequest) ProtoMessage() {}

func (x *ListenForChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenForChangesRequest.ProtoReflect.Descriptor instead.
func (*ListenForChangesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_fetcher_pb_fetcher_proto_rawDescGZIP(), []int{3}
}

//I know im duplicating data here, measureID and id inside a measure,
//but the idea behind that was, that when im sending DELETED event
//im not sending the whole measure, so user can still identify correct measure
type ListenForChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeasureID int32    `protobuf:"varint,1,opt,name=measureID,proto3" json:"measureID,omitempty"`
	Change    Change   `protobuf:"varint,2,opt,name=change,proto3,enum=fetcher.Change" json:"change,omitempty"`
	Measure   *Measure `protobuf:"bytes,3,opt,name=measure,proto3" json:"measure,omitempty"`
}

func (x *ListenForChangesResponse) Reset() {
	*x = ListenForChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenForChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenForChangesResponse) ProtoMessage() {}

func (x *ListenForChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenForChangesResponse.ProtoReflect.Descriptor instead.
func (*ListenForChangesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_fetcher_pb_fetcher_proto_rawDescGZIP(), []int{4}
}

func (x *ListenForChangesResponse) GetMeasureID() int32 {
	if x != nil {
		return x.MeasureID
	}
	return 0
}

func (x *ListenForChangesResponse) GetChange() Change {
	if x != nil {
		return x.Change
	}
	return Change_DELETED
}

func (x *ListenForChangesResponse) GetMeasure() *Measure {
	if x != nil {
		return x.Measure
	}
	return nil
}

type AddProbeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeasureID int32   `protobuf:"varint,1,opt,name=measureID,proto3" json:"measureID,omitempty"`
	Response  string  `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	Duration  float32 `protobuf:"fixed32,3,opt,name=duration,proto3" json:"duration,omitempty"`
	CreatedAt float32 `protobuf:"fixed32,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *AddProbeRequest) Reset() {
	*x = AddProbeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProbeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProbeRequest) ProtoMessage() {}

func (x *AddProbeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProbeRequest.ProtoReflect.Descriptor instead.
func (*AddProbeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_fetcher_pb_fetcher_proto_rawDescGZIP(), []int{5}
}

func (x *AddProbeRequest) GetMeasureID() int32 {
	if x != nil {
		return x.MeasureID
	}
	return 0
}

func (x *AddProbeRequest) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *AddProbeRequest) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *AddProbeRequest) GetCreatedAt() float32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type AddProbeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddProbeResponse) Reset() {
	*x = AddProbeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProbeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProbeResponse) ProtoMessage() {}

func (x *AddProbeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_fetcher_pb_fetcher_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProbeResponse.ProtoReflect.Descriptor instead.
func (*AddProbeResponse) Descriptor() ([]byte, []int) {
	return file_pkg_fetcher_pb_fetcher_proto_rawDescGZIP(), []int{6}
}

var File_pkg_fetcher_pb_fetcher_proto protoreflect.FileDescriptor

var file_pkg_fetcher_pb_fetcher_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x6b, 0x67, 0x2f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x70, 0x62,
	0x2f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x22, 0x47, 0x0a, 0x07, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x08, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x52, 0x08, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x49,
	0x44, 0x12, 0x27, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x12,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2a, 0x2e, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x44, 0x49, 0x54, 0x45, 0x44,
	0x10, 0x02, 0x32, 0xf6, 0x01, 0x0a, 0x0e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x12, 0x18, 0x2e, 0x66, 0x65,
	0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x0d, 0x5a, 0x0b, 0x70,
	0x6b, 0x67, 0x2f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pkg_fetcher_pb_fetcher_proto_rawDescOnce sync.Once
	file_pkg_fetcher_pb_fetcher_proto_rawDescData = file_pkg_fetcher_pb_fetcher_proto_rawDesc
)

func file_pkg_fetcher_pb_fetcher_proto_rawDescGZIP() []byte {
	file_pkg_fetcher_pb_fetcher_proto_rawDescOnce.Do(func() {
		file_pkg_fetcher_pb_fetcher_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_fetcher_pb_fetcher_proto_rawDescData)
	})
	return file_pkg_fetcher_pb_fetcher_proto_rawDescData
}

var file_pkg_fetcher_pb_fetcher_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_fetcher_pb_fetcher_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_pkg_fetcher_pb_fetcher_proto_goTypes = []interface{}{
	(Change)(0),                      // 0: fetcher.Change
	(*Measure)(nil),                  // 1: fetcher.Measure
	(*GetMeasuresRequest)(nil),       // 2: fetcher.GetMeasuresRequest
	(*GetMeasuresResponse)(nil),      // 3: fetcher.GetMeasuresResponse
	(*ListenForChangesRequest)(nil),  // 4: fetcher.ListenForChangesRequest
	(*ListenForChangesResponse)(nil), // 5: fetcher.ListenForChangesResponse
	(*AddProbeRequest)(nil),          // 6: fetcher.AddProbeRequest
	(*AddProbeResponse)(nil),         // 7: fetcher.AddProbeResponse
}
var file_pkg_fetcher_pb_fetcher_proto_depIdxs = []int32{
	1, // 0: fetcher.GetMeasuresResponse.measures:type_name -> fetcher.Measure
	0, // 1: fetcher.ListenForChangesResponse.change:type_name -> fetcher.Change
	1, // 2: fetcher.ListenForChangesResponse.measure:type_name -> fetcher.Measure
	2, // 3: fetcher.FetcherService.GetMeasures:input_type -> fetcher.GetMeasuresRequest
	6, // 4: fetcher.FetcherService.AddProbe:input_type -> fetcher.AddProbeRequest
	4, // 5: fetcher.FetcherService.ListenForChanges:input_type -> fetcher.ListenForChangesRequest
	3, // 6: fetcher.FetcherService.GetMeasures:output_type -> fetcher.GetMeasuresResponse
	7, // 7: fetcher.FetcherService.AddProbe:output_type -> fetcher.AddProbeResponse
	5, // 8: fetcher.FetcherService.ListenForChanges:output_type -> fetcher.ListenForChangesResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_fetcher_pb_fetcher_proto_init() }
func file_pkg_fetcher_pb_fetcher_proto_init() {
	if File_pkg_fetcher_pb_fetcher_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_fetcher_pb_fetcher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Measure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_fetcher_pb_fetcher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeasuresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_fetcher_pb_fetcher_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeasuresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_fetcher_pb_fetcher_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenForChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_fetcher_pb_fetcher_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenForChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_fetcher_pb_fetcher_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProbeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_fetcher_pb_fetcher_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProbeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_fetcher_pb_fetcher_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_fetcher_pb_fetcher_proto_goTypes,
		DependencyIndexes: file_pkg_fetcher_pb_fetcher_proto_depIdxs,
		EnumInfos:         file_pkg_fetcher_pb_fetcher_proto_enumTypes,
		MessageInfos:      file_pkg_fetcher_pb_fetcher_proto_msgTypes,
	}.Build()
	File_pkg_fetcher_pb_fetcher_proto = out.File
	file_pkg_fetcher_pb_fetcher_proto_rawDesc = nil
	file_pkg_fetcher_pb_fetcher_proto_goTypes = nil
	file_pkg_fetcher_pb_fetcher_proto_depIdxs = nil
}
